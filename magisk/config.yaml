redir-port: 9797
mixed-port: 7890
tproxy-port: 0
allow-lan: true
geodata-mode: true
unified-delay: true
mode: rule
log-level: info
global-ua: clash-verge/v1.6.0
ipv6: false
tcp-concurrent: true
keep-alive-interval: 30
geo-auto-update: true
geo-update-interval: 24
geox-url:
  geoip: "https://jsd.onmicrosoft.cn/gh/Loyalsoldier/geoip@release/geoip.dat"
  geosite: "https://jsd.onmicrosoft.cn/gh/Loyalsoldier/v2ray-rules-dat@release/geosite.dat"
  mmdb: "https://jsd.onmicrosoft.cn/gh/Loyalsoldier/geoip@release/Country.mmdb"
find-process-mode: strict
global-client-fingerprint: chrome

sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  skip-domain:
    - Mijia Cloud


profile:
  store-fake-ip: true
  store-selected: true

external-controller: 127.0.0.1:9090
external-ui: yacd
bind-address: "*"

tun:
  enable: true
  device: utun
  stack: mixed
  mtu: 1280
  dns-hijack:
    - any:53
  auto-route: true

dns:
  enable: true
  ipv6: false
  listen: 0.0.0.0:1053
  enhanced-mode: redir-host
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter:
    - '*'
    - localhost.ptlogin2.qq.com
    - dns.msftncsi.com
    - www.msftncsi.com
    - www.msftconnecttest.com
    - time1.cloud.tencent.com
    - '+.lan'
    - '+.invalid.*'
    - '+.localhost'
    - '+.local.*'
    - '+.time.*'
    - '+.ntp.*'
    - '+.time.edu.cn'
    - '+.ntp.org.cn'
    - '+.pool.ntp.org'
    - '+.qpic.cn'
  nameserver-policy:
    'rule-set:CustomDirect':
      - "https://223.5.5.5/dns-query#🐼 CN"
      - "https://120.53.53.53/dns-query#🐼 CN"
    
    'rule-set:Microsoft':
      - "https://223.5.5.5/dns-query#🐼 CN"
      - "https://120.53.53.53/dns-query#🐼 CN"

    'rule-set:Onedrive':
      - "https://223.5.5.5/dns-query#🐼 CN"
      - "https://120.53.53.53/dns-query#🐼 CN"

    'rule-set:Copilot': 
      - "https://8.8.4.4/dns-query#🤖 Copilot"
      - "https://1.0.0.1/dns-query#🤖 Copilot"

    'rule-set:CustomProxy': 
      - "https://8.8.4.4/dns-query#♻️ Auto"
      - "https://1.0.0.1/dns-query#♻️ Auto"
    
    'rule-set:OpenAi': 
      - "https://8.8.4.4/dns-query#🤖 OpenAi"
      - "https://1.0.0.1/dns-query#🤖 OpenAi"

    'rule-set:Spotify': 
      - "https://8.8.4.4/dns-query#🎶 Spotify"
      - "https://1.0.0.1/dns-query#🎶 Spotify"
  
    'rule-set:Telegram': 
      - "https://8.8.4.4/dns-query#📲 Telegram"
      - "https://1.0.0.1/dns-query#📲 Telegram"

    'geosite:cn,private':
      - "https://223.5.5.5/dns-query#🐼 CN"
      - "https://120.53.53.53/dns-query#🐼 CN"
  
  nameserver:
    - "https://8.8.4.4/dns-query#♻️ Auto"
    - "https://1.0.0.1/dns-query#♻️ Auto"

  proxy-server-nameserver:
    - "https://223.5.5.5/dns-query#🐼 CN"
    - "https://120.53.53.53/dns-query#🐼 CN"


p: &p
    {type: http, interval: 86400, health-check: {enable: true, url: https://www.gstatic.com/generate_204, interval: 300}}
u: &u 
  type: url-test
  use:
    - 🛫 机场1
    - 🛫 机场2
    - 🛫 机场3
    - 🛫 机场4
    - 🛫 机场5
    - 🛫 机场6
  exclude-filter: "套餐|流量|群组|频道|官网|推荐使用|测试|电报" #排除满足关键词或正则表达式的节点
  exclude-type: "http" #排除指定类型的节点，不支持正则表达式，通过 | 分割

proxy-providers:
# 机场订阅
# 需要修改机场名，订阅，存储目录
# 别忘了同时修改 节点筛选部分的机场名

  🛫 机场1: {<<: *p, url: "https://igdux.top/~Clash", path: ./机场/机场1.yaml, override: {additional-prefix: "机场1 | "}}
  🛫 机场2: {<<: *p, url: "订阅地址2", path: ./机场/机场2.yaml, override: {additional-prefix: "机场2 | "}}
  🛫 机场3: {<<: *p, url: "订阅地址3", path: ./机场/机场3.yaml, override: {additional-prefix: "机场3 | "}}
  🛫 机场4: {<<: *p, url: "订阅地址4", path: ./机场/机场4.yaml, override: {additional-prefix: "机场4 | "}}
  🛫 机场5: {<<: *p, url: "订阅地址5", path: ./机场/机场5.yaml, override: {additional-prefix: "机场5 | "}}
  🛫 机场6: {<<: *p, url: "订阅地址6", path: ./机场/机场6.yaml, override: {additional-prefix: "机场6 | "}}

proxy-groups:
  #- {name: 🚀 Select, type: select, proxies: [♻️ Auto,🐼 CN], <<: *u}
  - {name: ♻️ Auto, <<: *u, tolerance: 2, type: url-test}
  - {name: 🌎 Select1, type: select, <<: *u}
  - {name: 🌎 Select2, type: select, <<: *u}
  - {name: 🌎 Select3, type: select, <<: *u}
  - {name: 🔯 Load balancing, <<: *u, type: load-balance, strategy: consistent-hashing, url: 'https://www.gstatic.com/generate_204', interval: 300, lazy: true}
  - {name: 🛠 Fallback, <<: *u, type: fallback, url: 'https://www.gstatic.com/generate_204', interval: 300, lazy: true}
  - {name: 🤖 OpenAi, type: select, proxies: [♻️ Auto,🌎 Select1,🌎 Select2,🌎 Select3,🐼 CN]}
  - {name: 🤖 Copilot, type: select, proxies: [♻️ Auto,🌎 Select1,🌎 Select2,🌎 Select3,🐼 CN]}
  - {name: 🤖 Gemini, type: select, proxies: [♻️ Auto,🌎 Select1,🌎 Select2,🌎 Select3,🐼 CN]} 
  - {name: 🎶 Spotify, type: select, proxies: [♻️ Auto,🌎 Select1,🌎 Select2,🌎 Select3,🐼 CN]}
  - {name: Ⓜ️ Microsoft, type: select, proxies: [🐼 CN,♻️ Auto,🌎 Select1,🌎 Select2,🌎 Select3]}
  - {name: ☁ Onedrive, type: select, proxies: [🐼 CN,♻️ Auto,🌎 Select1,🌎 Select2,🌎 Select3]}
  - {name: 🔐 Google, type: select, proxies: [♻️ Auto,🌎 Select1,🌎 Select2,🌎 Select3,🐼 CN]}
  - {name: 📲 Telegram, type: select, proxies: [♻️ Auto]}
  - {name: 🐼 CN, type: select, proxies: [DIRECT]}
  - {name: 🐋 Final, type: select, proxies: [♻️ Auto]}

rule-providers:
  Microsoft:
    type: http
    behavior: classical
    format: yaml
    path: ./rule_providers/Microsoft.yaml
    url: "https://raw.githubusercontent.com/RiverFlowsInUUU/Rule/main/magisk/Microsoft.yaml"
    interval: 86400
  Onedrive:
    type: http
    behavior: classical
    format: yaml
    path: ./rule_providers/Onedrive.yaml
    url: "https://raw.githubusercontent.com/RiverFlowsInUUU/Rule/main/magisk/Onedrive.yaml"
    interval: 86400
  Copilot:
    type: http
    behavior: classical
    format: yaml
    path: ./rule_providers/Copilot.yaml
    url: "https://raw.githubusercontent.com/RiverFlowsInUUU/Rule/main/magisk/Copilot.yaml"
    interval: 86400
  Spotify:
    type: http
    behavior: classical
    format: yaml
    path: ./rule_providers/Spotify.yaml
    url: "https://raw.githubusercontent.com/RiverFlowsInUUU/Rule/main/magisk/Spotify.yaml"
    interval: 86400
  OpenAi:
    type: http
    behavior: classical
    format: yaml
    path: ./rule_providers/OpenAi.yaml
    url: "https://raw.githubusercontent.com/RiverFlowsInUUU/Rule/main/magisk/Openai.yaml"
    interval: 86400
  Google:
    type: http
    behavior: classical
    format: yaml
    path: ./rule_providers/Google.yaml
    url: "https://raw.githubusercontent.com/RiverFlowsInUUU/Rule/main/magisk/Google.yaml"
    interval: 86400
  Gemini:
    type: http
    behavior: classical
    format: yaml
    path: ./rule_providers/Gemini.yaml
    url: "https://raw.githubusercontent.com/RiverFlowsInUUU/Rule/main/magisk/Gemini.yaml"
    interval: 86400
  Telegram:
    type: http
    behavior: classical
    format: yaml
    path: ./rule_providers/Telegram.yaml
    url: "https://raw.githubusercontent.com/RiverFlowsInUUU/Rule/main/magisk/Telegram.yaml"
    interval: 86400
  CustomDirect:
    type: file
    behavior: classical
    path: ./rule_providers/userDirect.yaml
  
  CustomProxy:
    type: file
    behavior: classical
    path: ./rule_providers/userProxy.yaml
rules:
  - RULE-SET,Telegram,📲 Telegram
  - RULE-SET,Copilot,🤖 Copilot
  - RULE-SET,Gemini,🤖 Gemini
  - RULE-SET,OpenAi,🤖 OpenAi
  - RULE-SET,Spotify,🎶 Spotify
  - RULE-SET,Microsoft,Ⓜ️ Microsoft
  - RULE-SET,Onedrive,☁ Onedrive
  - RULE-SET,Google,🔐 Google
  - RULE-SET,CustomProxy,♻️ Auto
  - RULE-SET,CustomDirect,🐼 CN
  - GEOSITE,CN,🐼 CN
  - GEOIP,private,🐼 CN
  - GEOIP,CN,🐼 CN
  - MATCH,🐋 Final
